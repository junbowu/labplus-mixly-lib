// This file was automatically generated.  Do not modify.
'use strict';
goog.provide('Blockly.en');
//goog.require('Blockly');

 //TM1650数码管
Blockly.TM1650_int='int';
Blockly.TM1650_double='double';
Blockly.TM1650_float='float';
Blockly.TM1650_long='long';
Blockly.TM1650_char='char';
//scratchbox
Blockly.SCRATCHBOX_MOTOR_ON_FOR = "motor on for";
Blockly.SCRATCHBOX_MOTOR_ON_FOR2 = "sec(s)";
Blockly.SCRATCHBOX_MOTOR_ON = "motor on";
Blockly.SCRATCHBOX_MOTOR_OFF = "motor off";
Blockly.SCRATCHBOX_MOTOR_POWER = "motor power";
Blockly.SCRATCHBOX_MOTOR_DIRECTION = "motor direction";
Blockly.SCRATCHBOX_MOTOR_DIRECTION1 = "this way";
Blockly.SCRATCHBOX_MOTOR_DIRECTION2 = "that way";
Blockly.SCRATCHBOX_MOTOR_DIRECTION3 = "reverse";
Blockly.SCRATCHBOX_SENSOR_VALUE = "sensor value";
Blockly.SCRATCHBOX_SENSOR_1 = "slider";
Blockly.SCRATCHBOX_SENSOR_2 = "light";
Blockly.SCRATCHBOX_SENSOR_3 = "sound";
Blockly.SCRATCHBOX_SENSOR_A = "resistance-A";
Blockly.SCRATCHBOX_SENSOR_B = "resistance-B";
Blockly.SCRATCHBOX_SENSOR_C = "resistance-C";
Blockly.SCRATCHBOX_SENSOR_D = "resistance-D";
Blockly.SCRATCHBOX_SENSOR_TRIGGER = "sensor";
Blockly.SCRATCHBOX_SENSOR_TRIGGER1 = "button pressed";
Blockly.SCRATCHBOX_SENSOR_TRIGGER2 = "A connected";
Blockly.SCRATCHBOX_SENSOR_TRIGGER3 = "B connected";
Blockly.SCRATCHBOX_SENSOR_TRIGGER4 = "C connected";
Blockly.SCRATCHBOX_SENSOR_TRIGGER5 = "D connected";
Blockly.SCRATCHBOX_SENSOR_MAP_TO = "map";
Blockly.SCRATCHBOX_SENSOR_MAP_TO2 = "based on";
Blockly.SCRATCHBOX_SENSOR_MAP_TO3 = "to";
Blockly.SCRATCHBOX_SENSOR_MAP_VALUE = "sensor map value";

Blockly.SCRATCHBOX_LEFT_MOTOR_ON_FOR = "left motor on for";
Blockly.SCRATCHBOX_LEFT_MOTOR_ON_FOR2 = "sec(s)";
Blockly.SCRATCHBOX_LEFT_MOTOR_ON = "left motor on";
Blockly.SCRATCHBOX_LEFT_MOTOR_OFF = "left motor off";
Blockly.SCRATCHBOX_LEFT_MOTOR_POWER = "left motor power";
Blockly.SCRATCHBOX_LEFT_MOTOR_DIRECTION = "left motor direction";

Blockly.SCRATCHBOX_RIGHT_MOTOR_ON_FOR = "right motor on for";
Blockly.SCRATCHBOX_RIGHT_MOTOR_ON_FOR2 = "sec(s)";
Blockly.SCRATCHBOX_RIGHT_MOTOR_ON = "right motor on";
Blockly.SCRATCHBOX_RIGHT_MOTOR_OFF = "right motor off";
Blockly.SCRATCHBOX_RIGHT_MOTOR_POWER = "right motor power";
Blockly.SCRATCHBOX_RIGHT_MOTOR_DIRECTION = "right motor direction";

//experibox
Blockly.EXPERIBOX_SET_MOTOR_SPEED = "set Motor speed";
Blockly.EXPERIBOX_SET_MOTOR_REVERSE = "set Motor reverse";
Blockly.EXPERIBOX_SET_MOTOR_STOP = "set Motor stop";
Blockly.EXPERIBOX_SET_SERVO_ANGLE = "set Servo angle";
Blockly.EXPERIBOX_SET_SEV_SEG = "set Sev_Seg value";
Blockly.EXPERIBOX_TURN_OFF_SEV_SEG = "turn off Sev_Seg";
Blockly.EXPERIBOX_SET_LED_LIGHT = "set Led_light";
Blockly.EXPERIBOX_SET_LED_LIGHT = "set Led_color"; //2017/02/06
Blockly.EXPERIBOX_SET_TRAFFIC_LED = "set Trafic_Led";
Blockly.EXPERIBOX_TURN_OFF_LED_LIGHT = "turn off Led light";
Blockly.EXPERIBOX_TURN_ON_BUZZER = "turn on Buzzer";
Blockly.EXPERIBOX_TURN_OFF_BUZZER = "turn off Buzzer";
Blockly.EXPERIBOX_NORTH = "North";
Blockly.EXPERIBOX_SOUTH = "South";
Blockly.EXPERIBOX_WEST = "West";
Blockly.EXPERIBOX_EAST = "East";
Blockly.EXPERIBOX_ON = "On";
Blockly.EXPERIBOX_OFF = "Off";
Blockly.EXPERIBOX_UP = "Up";
Blockly.EXPERIBOX_DOWN = "Down";
Blockly.EXPERIBOX_LEFT = "Left";
Blockly.EXPERIBOX_RIGHT = "Right";
Blockly.EXPERIBOX_CENTER = "Center";
Blockly.EXPERIBOX_ULTRASONIC_SENSOR_VALUE = "Ultrasonic sensor value";
Blockly.EXPERIBOX_SOUND_SENSOR_VALUE = "Sound sensor value";
Blockly.EXPERIBOX_TEMPERATURE_SENSOR_VALUE = "Temperature sensor value";
Blockly.EXPERIBOX_HUMIDITY_SENSOR_VALUE = "Humidity sensor value";
Blockly.EXPERIBOX_LIGHT_SENSOR_VALUE = "Light sensor value";
Blockly.EXPERIBOX_POTENTIONMETER_SENSOR_VALUE = "Potentionmeter sensor value";
Blockly.EXPERIBOX_PIRMOTION_SENSOR_VALUE = "Pirmotion sensor value";
Blockly.EXPERIBOX_ANALOG1_VALUE = "Value of AnalogRead1";
Blockly.EXPERIBOX_ANALOG2_VALUE = "Value of AnalogRead2";
Blockly.EXPERIBOX_BUTTON_CLICKED = "Button";
Blockly.EXPERIBOX_BUTTON_CLICKED2 = "pressed?";
Blockly.EXPERIBOX_PIRMOTION_SENSOR_TRIGGERED = "Pirmotion sensor triggered?";
Blockly.EXPERIBOX_ULTRASONIC_SENSOR = 'Ultrasonic';
Blockly.EXPERIBOX_SOUND_SENSOR = 'Sound';
Blockly.EXPERIBOX_TEMPERATURE_SENSOR = 'Temperature';
Blockly.EXPERIBOX_HUMIDITY_SENSOR = 'Humidity';
Blockly.EXPERIBOX_LIGHT_SENSOR = 'Light';
Blockly.EXPERIBOX_POTENTIONMETER_SENSOR = 'Potentionmeter';

//idislab
Blockly.IDISLAB_SENSOR_VALUE = "sensor value";
Blockly.IDISLAB_SENSOR_MAP_TO = "map";
Blockly.IDISLAB_SENSOR_MAP_TO2 = "based on";
Blockly.IDISLAB_SENSOR_MAP_TO3 = "to";
Blockly.IDISLAB_SENSOR_MAP_VALUE = "sensor map value";

//robot
Blockly.ROBOT_SOUND_PLAY = "Play";
Blockly.ROBOT_LIGHT = "Set Sidelamp color to";
Blockly.ROBOT_LIGHT_BLACK = 'Black';
Blockly.ROBOT_LIGHT_RED = 'Red';
Blockly.ROBOT_LIGHT_ORANGE = 'Orange';
Blockly.ROBOT_LIGHT_YELLOW = 'Yellow';
Blockly.ROBOT_LIGHT_GREEN = 'Green';
Blockly.ROBOT_LIGHT_BLUE = 'Blue';
Blockly.ROBOT_LIGHT_PURPLE = 'Purple';
Blockly.ROBOT_LIGHT_R = "R";
Blockly.ROBOT_LIGHT_G = "G";
Blockly.ROBOT_LIGHT_B = "B";
Blockly.ROBOT_LIGHT_OFF = 'Set Sidelamp Off';
Blockly.ROBOT_BUTTON_LIGHT = "Set Button Light";
Blockly.ROBOT_BUTTON_LIGHT_ON = "Set Button Light On";
Blockly.ROBOT_BUTTON_LIGHT_OFF = "Set Button Light Off";
Blockly.ROBOT_SCREEN = "Screen show";
Blockly.ROBOT_SCREEN_SMILE = 'Smile';
Blockly.ROBOT_SCREEN_UNHAPPY = 'Unhappy';
Blockly.ROBOT_SCREEN_EYES_CLOSED = 'Eyes closed';
Blockly.ROBOT_SCREEN_LEFT_ARROW = 'Left arrow';
Blockly.ROBOT_SCREEN_RIGHT_ARROW = 'Right arrow';
Blockly.ROBOT_SCREEN_CROSS_STRIPE = 'Cross stripe';
Blockly.ROBOT_SCREEN_ZEBRA_STRIPE = 'Zebra stripe';
Blockly.ROBOT_SCREEN_OFF = 'Screen off';
Blockly.ROBOT_ON = "ON";
Blockly.ROBOT_OFF = "OFF";
Blockly.ROBOT_DRIVE_SPEED1 = "Speed_1(Fastest)";
Blockly.ROBOT_DRIVE_SPEED2 = "Speed_2";
Blockly.ROBOT_DRIVE_SPEED3 = "Speed_3";
Blockly.ROBOT_DRIVE_SPEED4 = "Speed_4(Slowest)";
Blockly.ROBOT_DRIVE_ANGLE5 = "Angle 5°";
Blockly.ROBOT_DRIVE_ANGLE45 = "Angle 45°";
Blockly.ROBOT_DRIVE_ANGLE90 = "Angle 90°";
Blockly.ROBOT_DRIVE_FORWARD = "Continued forward";
Blockly.ROBOT_DRIVE_BACKWARD = "Continued backward";
Blockly.ROBOT_DRIVE_FORWARD_STEPS = "Forward";
Blockly.ROBOT_DRIVE_BACKWARD_STEPS = "Backward";
Blockly.ROBOT_DRIVE_STOP = "Stop";
Blockly.ROBOT_DRIVE_TURN_LEFT = "Turn left";
Blockly.ROBOT_DRIVE_TURN_RIGHT = "Turn right";
Blockly.ROBOT_DRIVE_TURN_AROUND = "Turn around";
Blockly.ROBOT_SOUND_M_Do = 'Baritone 1 Do';
Blockly.ROBOT_SOUND_M_Re = 'Baritone 2 Re';
Blockly.ROBOT_SOUND_M_Mi = 'Baritone 3 Mi';
Blockly.ROBOT_SOUND_M_Fa = 'Baritone 4 Fa';
Blockly.ROBOT_SOUND_M_So = 'Baritone 5 So';
Blockly.ROBOT_SOUND_M_La = 'Baritone 6 La';
Blockly.ROBOT_SOUND_M_Si = 'Baritone 7 Si';
Blockly.ROBOT_SOUND_L_Do = 'Bass 1 Do';
Blockly.ROBOT_SOUND_L_Re = 'Bass 2 Re';
Blockly.ROBOT_SOUND_L_Mi = 'Bass 3 Mi';
Blockly.ROBOT_SOUND_L_Fa = 'Bass 4 Fa';
Blockly.ROBOT_SOUND_L_So = 'Bass 5 So';
Blockly.ROBOT_SOUND_L_La = 'Bass 6 La';
Blockly.ROBOT_SOUND_L_Si = 'Bass 7 Si';
Blockly.ROBOT_SOUND_H_Do = 'Treble 1 Do';
Blockly.ROBOT_SOUND_H_Re = 'Treble 2 Re';
Blockly.ROBOT_SOUND_H_Mi = 'Treble 3 Mi';
Blockly.ROBOT_SOUND_H_Fa = 'Treble 4 Fa';
Blockly.ROBOT_SOUND_H_So = 'Treble 5 So';
Blockly.ROBOT_SOUND_H_La = 'Treble 6 La';
Blockly.ROBOT_SOUND_H_Si = 'Treble 7 Si';
Blockly.ROBOT_STEP_UNIT = 'Step(s)';

//inout
Blockly.INOUT_BUILDIN_LED = "Build-in LED Stat";
Blockly.INOUT_BUILDIN_LED_TOOLTIP = 'light or off the build-in LED';
Blockly.INOUT_DIGITAL_WRITE = "DigitalWrite PIN#";
Blockly.INOUT_DIGITAL_WRITE_STAT = "Stat";
Blockly.INOUT_DIGITAL_WRITE_TOOLTIP = 'Write digital value to a specific Port';
Blockly.INOUT_DIGITAL_READ = "DigitalRead PIN#";
Blockly.INOUT_DIGITAL_READ_TOOLTIP = 'Read digital value from a specific Port';
Blockly.INOUT_ANALOG_WRITE = "AnalogWrite PIN#";
Blockly.INOUT_ANALOG_WRITE_VALUE = "value";
Blockly.INOUT_ANALOG_WRITE_TOOLTIP = 'Write analog value between 0 and 255 to a specific Port';
Blockly.INOUT_ANALOG_READ = "AnalogRead PIN#";
Blockly.INOUT_ANALOG_READ_TOOLTIP = 'Return value between 0 and 1024';
Blockly.INOUT_TONE = "Tone PIN#";
Blockly.INOUT_TONE_FREQUENCY = "frequency";
Blockly.INOUT_TONE_TOOLTIP = "Generate audio tones on a pin";
Blockly.INOUT_NOTONE = "No tone PIN#";
Blockly.INOUT_NOTONE_TOOLTIP = "Stop generating a tone on a pin";
Blockly.INOUT_SERIAL_PRINT = "Serial Print";
Blockly.INOUT_SERIAL_PRINT_TOOLTIP = 'Prints data to the console/serial port as human-readable ASCII text.';
Blockly.SERVO_MOVE = "Servo PIN#";
Blockly.SERVO_MOVE_DEGREE = "Degree (0~180)";
Blockly.SERVO_MOVE_TOOLTIP = 'move between 0~180 degree';
Blockly.SERVO_READ = "Servo PIN#";
Blockly.SERVO_READ_DEGREE = "Read Degrees";
Blockly.SERVO_READ_TOOLTIP = 'return that degree with the last servo move.';
Blockly.CONTROLS_MSTIMER2_EVERY='every';
Blockly.CONTROLS_MSTIMER2_DO='do';
Blockly.CONTROLS_MSTIMER2_START='start';
Blockly.CONTROLS_MSTIMER2_STOP='stop';

//communicate
Blockly.SERIAL_BEGIN = 'Set the serial baudrate';
Blockly.SERIAL_PRINTLN = 'Print text to serial port(newline)';
Blockly.SERIAL_AVAILABLE = 'Serial port has data?';
Blockly.SERIAL_READSTR = 'Read string from serial port';

//duinoplus
Blockly.DUINOPLUS_TEMPERATURE='Temperature (℃)';
Blockly.DUINOPLUS_LIGHT='Light (analog)';
Blockly.DUINOPLUS_SOUND='Sound (analog)';
Blockly.DUINOPLUS_HUMANINFRARED='Human Infrared (Digital)';
Blockly.DUINOPLUS_DIGITALLED='Digital Tube';

Blockly.DUINOPLUS_DISPLAY='display';
Blockly.TurnOff_DISPLAY='Turn off display';
Blockly.DUINOPLUS_WHITCH_NUM='the';
Blockly.DUINOPLUS_WHITCH_NUM1='.th show';
Blockly.DUINOPLUS_SLIDING='Slide bar (analog)';
Blockly.DUINOPLUS_LED='LED lights';
Blockly.DUINOPLUS_BUTTON='Button (Digital)';
Blockly.DUINOPLUS_BUZZER='Buzzer';
Blockly.DUINOPLUS_STAT='Set';
Blockly.DUINOPLUS_ON='On';
Blockly.DUINOPLUS_OFF='Off';
Blockly.DUINOPLUS_FREQUENCY='Frequency';
Blockly.DUINOPLUS_DURATION='Duration';
Blockly.DUINOPLUS_DIGITALLED_SETUP='Initialize Digital Tube';
Blockly.DUINOPLUS_DIGITALLED_DISPLAY='display';
Blockly.DUINOPLUS_DIGITALLED_DOT_POS='Digital Dot pos';
Blockly.DUINOPLUS_DIGITALLED_CS='CS';
Blockly.DUINOPLUS_DIGITALLED_DI='DI';
Blockly.DUINOPLUS_DIGITALLED_CLK='CLK';
Blockly.DUINOPLUS_DOT='Display the decimal point';
Blockly.DUINOPLUS_TRUE='Yes';
Blockly.DUINOPLUS_FALSE='No';
Blockly.DUINOPLUS_CLEAR='clear';
Blockly.DUINOPLUS_BTN_UP='Up-Pin2';
Blockly.DUINOPLUS_BTN_DOWN='Down-Pin3';
Blockly.DUINOPLUS_BTN_LEFT='Left-Pin4';
Blockly.DUINOPLUS_BTN_RIGHT='Right-Pin5';
Blockly.DUINOPLUS_BTN_MID='Middle-Pin6';
Blockly.DUINOPLUS_MATRIXLED_SETUP='Initialize Matrix LED';
Blockly.DUINOPLUS_MATRIXLED='Matrix LED';
Blockly.PIXEL_X='pixel x';
Blockly.PIXEL_Y='y';
Blockly.PIXEL_ON='On';
Blockly.PIXEL_OFF='Off';
Blockly.PIXEL_LINE='the';
Blockly.PIXEL_LINE1='th row';
Blockly.PIXEL_LINE2='th column';
Blockly.PIXEL_CLEAR='clear';
Blockly.DUINOPLUS_NOTE='note';
Blockly.DUINOPLUSBOX = 'DuinoplusBox'

Blockly.Cal_Reverse = "reverse";
Blockly.Cal_Value = "the value";
Blockly.Cal_NumLen = "with bit length";


//20170109.....FOR GLOBAL.....
Blockly.Serial_IR = "Infrared";
Blockly.Serial_BL = "Bluetooth";
Blockly.MATRIX_NAME = "Matrix's name";
Blockly.TEMPERATURE = "Temperature";
Blockly.HUMILITY = "Humility";
Blockly.SECOND = "Seconds";
Blockly.TURN_ON = "On";
Blockly.TURN_OFF = "Off";
Blockly.RED = "Red";
Blockly.GREEN = "Green";
Blockly.BLUE = "Blue";
Blockly.SPEED = "Rate";
Blockly.CLOCKWISE = "Clockwise";
Blockly.ANTICLOCKWISE = "AntiClockwise";
Blockly.STOP = "Stop";
Blockly.PLAY_RECORD = "Play";
Blockly.START_RECORD = "Record";
Blockly.AS = "As";
Blockly.EEPWRITE_ADDR = "Write to eeprom at addr";
Blockly.EEPWRITE_VALUE = "value as";
Blockly.EEPREAD_ADDR = "Read from eeprom at addr";

//.....FOR JOINT.....INPUT AND OUTPUT...
Blockly.JOINT_BUTTON_VALUE = "Button";
Blockly.JOINT_TLITSWITCH_VALUE = "Tilt switch";
Blockly.JOINT_INFRARED_VALUE = "Infrared sensor";
Blockly.JOINT_SILDESWITCH_VALUE = "Slide switch";
Blockly.JOINT_MOTIONTRIGGER_VALUE = "Motion detector";
Blockly.JOINT_SOUNDTRIGGER_VALUE = "Sound trigger";
Blockly.JOINT_TOUCHBUTTON_VALUE = "Touch key";
Blockly.JOINT_MAGNETICSWITCH_VALUE = "Magnetic switch";
Blockly.JOINT_FIRETRIGGER_VALUE = "Fire trigger";
Blockly.JOINT_LIGHTSENSOR_VALUE = "Light sensor";
Blockly.JOINT_SLIDINGPOTENTIOMETER_VALUE = "Sliding potentiometer";
Blockly.JOINT_ROTATINGPOTENTIOMETER_VALUE = "Rotary potentiometer";
Blockly.JOINT_TEMPSENSOR_VALUE = "Temperature sensor";
Blockly.JOINT_WATERSENSOR_VALUE = "Moisture sensor";
Blockly.JOINT_HUMTEMPSENSOR_VALUE = "Temp and humi sensor";
Blockly.JOINT_ULTRASONICSENSOR_VALUE = "Ultrasonic sensor(Old Version)";
Blockly.JOINT_ULTRASONICSENSOR_VALUE0 = "Ultrasonic sensor";
Blockly.JOINT_LIMITSWITCH_VALUE = "Limit switch";
Blockly.JOINT_LOWLIGHTSENSOR_VALUE = "Sensitive light sensor";
Blockly.JOINT_RESISTANCESENSOR_VALUE = "Resistive sensor";
Blockly.JOINT_SET_BUZZER = "Sets buzzer";
Blockly.JOINT_SET_LED = "Sets LED light";
Blockly.JOINT_SET_LEDSTRIPLED = "Sets LED light bar";
Blockly.JOINT_SET_VIBRATIONMOTOR = "Sets Vibration motor";
Blockly.JOINT_SET_DCMOTOR = "Sets DC motor";
Blockly.JOINT_SET_RGBLED = "Sets RGB light";
Blockly.JOINT_SET_ELECTROMAGNET = "Sets electromagnet";
Blockly.JOINT_SET_RELAY = "Sets relay";
Blockly.JOINT_SET_FAN = "Sets fan";
Blockly.JOINT_SET_MOTOR = "Sets motor";
Blockly.JOINT_SET_RECON = "Activates the recorder";
Blockly.JOINT_SET_RECOFF = "Turns off the recorder";
Blockly.JOINT_SET_DIGITON = "Sets digital tube value";
Blockly.JOINT_SET_DIGITON_Char = "Sets digital tube value(Char type)";
Blockly.JOINT_SET_DIGITOFF = "Turns off digital tube";
Blockly.JOINT_SET_MATRIXON = "Sets dot matrix";
Blockly.JOINT_SET = "set";
Blockly.JOINT_SET_MIDI1 = "MIDI melodic sounds as";
Blockly.JOINT_SET_MIDI2 = "MIDI percusion as";
Blockly.JOINT_PLAYNOTE = "MIDI play note on";
Blockly.JOINT_GET_COLOR_SENSOR = "invoke color sensor";
Blockly.JOINT_RETURN_HSV = "HSV color";
Blockly.JOINT_RETURN_RGB = "RGB color";
Blockly.JOINT_STOPPLAYMIDI = "stop playing MIDI";
Blockly.JOINT_SETLCDNUM = "LCD display number";
Blockly.JOINT_SETLCDTIME = "LCD display time";
Blockly.JOINT_COLSELCD = "turn off LCD";
Blockly.JOINT_MP3PLAY = "MP3 module play on dir";
Blockly.JOINT_MP3MENU = "";
Blockly.JOINT_MP3MUSIC = "music";
Blockly.JOINT_MP3LOOP = "MP3 module repeatedly play on dir";
Blockly.JOINT_PAUSE = "pause";
Blockly.JOINT_STOP = "stop";
Blockly.JOINT_PLAY = "play";
Blockly.JOINT_MP3SET = "set Mp3 module to";
Blockly.JOINT_NEXT = "next music";
Blockly.JOINT_PREVIOUS = "previous music";
Blockly.JOINT_MP3STAT = "the state of Mp3 module is";
Blockly.JOINT_MIDI_PIANO = "Acoustic Grand Piano"; //Acoustic Grand Piano
Blockly.JOINT_Vibraphone = "Vibraphone"; //Vibraphone
Blockly.JOINT_MIDI_ORGAN = "Drawbar Organ"; //Drawbar Organ
Blockly.JOINT_Acoustic_Guitar = "Acoustic Guitar"; //Acoustic Guitar
Blockly.JOINT_Electric_Guitar = "Electric Guitar"; //Electric Guitar
Blockly.JOINT_Acoustic_Bass = "Acoustic Bass";  //Acoustic Bass
Blockly.JOINT_String_Ensemble = "String Ensemble";  //String Ensemble
Blockly.JOINT_Violin = "Violin";  //Violin
Blockly.JOINT_Trumpet = "Trumpet";  //Trumpet
Blockly.JOINT_Sax = "Sax";  //Sax
Blockly.JOINT_Flute = "Flute";  //Flute
Blockly.JOINT_Steel_Drums = "Steel Drums";  //Steel Drums
Blockly.JOINT_Lead = "Lead";  //Lead
Blockly.JOINT_Pad = "Pad";  //Pad
Blockly.JOINT_Bass_Drum = "Bass Drum";  //Bass Drum
Blockly.JOINT_Snare_Drum = "Snare Drum";  //Snare Drum
Blockly.JOINT_Closed_Hi_hat = "Closed Hi-hat";  //Closed Hi-hat
Blockly.JOINT_Open_Hi_hat = "Open Hi-hat";  //Open Hi-hat
Blockly.JOINT_Low_Tom = "Low Tom";  //Low Tom
Blockly.JOINT_High_Tom = "High Tom";  //High Tom
Blockly.JOINT_Tambourine = "Tambourine";  //Tambourine
Blockly.JOINT_Crash_Cymbal = "Crash Cymbal";  //Crash Cymbal
Blockly.JOINT_Ride_Cymbal = "Ride Cymbal";  //Ride Cymbal
Blockly.JOINT_Mute_High_Conga = "Mute High Conga";  //Mute High Conga
Blockly.JOINT_Low_Conga = "Low Conga";  //Low Conga
Blockly.JOINT_Maracas = "Maracas";  //Maracas
Blockly.JOINT_Claves = "Claves";  //Claves
Blockly.JOINT_MP3STATTIP = "return 0 when the mp3 module stoped; return 1 it is playing; return 2 when it is paused";
Blockly.JOINT_RGBSTRIP_DEFPIN = "Init rgb strips at pin";
Blockly.JOINT_RGBSTRIP_AMOUNT = ", total number";
Blockly.JOINT_RGBSTRIP_SETPIN = "Set rgb strips at pin";
Blockly.JOINT_RGBSTRIP_NUMBER = "";
Blockly.JOINT_RGBSTRIP_RED = "th light as red";
Blockly.JOINT_RGBSTRIP_GREEN = "green";
Blockly.JOINT_RGBSTRIP_BLUE = "blue";
Blockly.JOINT_RGBSTRIP_SEND = "refresh rgb strips";
Blockly.JOINT_RGBSTRIP_PALETTE = "th light color as";
Blockly.JOINT_COORDINATE = "coordinate";
Blockly.JOINT_STATUS = "status";
Blockly.JOINT_SET_COOROFCHAR = "set the coordinate of chars";
Blockly.JOINT_DISPLAY_CHAR = "add char";
Blockly.JOINT_CLEAR_MATRIX = "clear matrix";
Blockly.JOINT_SEND_MATRIX = "refresh matrix";
Blockly.JOINT_MP3SETVOLUME = "set MP3 module volume as";
Blockly.JOINT_SETTIME = "set time to the module as";
Blockly.JOINT_HOUR = "hour";
Blockly.JOINT_MINUTE = "minute";
Blockly.JOINT_SECOND = "second";
Blockly.JOINT_WEEK_DAY = "week-day";
Blockly.JOINT_DAY = "day";
Blockly.JOINT_MONTH = "month";
Blockly.JOINT_YEAR = "year";
Blockly.JOINT_GETTIME = "get time from module";
Blockly.JOINT_VOLUME = "volume";
//.....JOINT END.....

//.....FOR JOINTLITE.....
Blockly.JOINTLITE_group_in = "Group Input";
Blockly.JOINTLITE_group_out = "Group Output";
Blockly.JOINTLITE_INPUT = "Input";
Blockly.JOINTLITE_INPUTR = "Input branch(○)";
Blockly.JOINTLITE_INPUTL = "Input branch(●)";
Blockly.JOINTLITE_OUTPUT = "Output";
Blockly.JOINTLITE_OUTPUTR = "Output branch(○)";
Blockly.JOINTLITE_OUTPUTL = "Output branch(●)";
Blockly.JOINTLITE_Recorder_Play = "Play";
Blockly.JOINTLITE_Recorder_Rec= "Rec";
//.....JOINTLITE END.....

//Net
Blockly.NET_JUMPURL_TITLE = "jump to URL";

//... FOR LABROBOT...
Blockly.LEFT = "left";
Blockly.RIGHT = "right";
Blockly.DEGREE = "angle";
Blockly.BLACK = "black";
Blockly.WHITE = "white";
Blockly.LABROBOT_SET_RGBLED = "set RGB led color";
Blockly.LABROBOT_SET_RGBLEDOFF = "turn off RGB led";
Blockly.LABROBOT_SET_MOTOR = "set motor speed";
Blockly.LABROBOT_SET_TURNS = "turns";
Blockly.LABROBOT_STOP = "stop";
Blockly.LABROBOT_SET_MATRIX = "dot matrix display";
Blockly.LABROBOT_SMILE = "smile";
Blockly.LABROBOT_SAD = "sadness";
Blockly.LABROBOT_LEFTARROW = "left arrow";
Blockly.LABROBOT_RIGHTARROW = "right arrow";
Blockly.LABROBOT_EYECLOSED = "eye closed";
Blockly.LABROBOT_SET_MATRIXOFF = "turn off dot matrix display";
Blockly.LABROBOT_SET_NOTE = "play notes";
Blockly.LABROBOT_DROPSENSOR = "anti-drop sensor";
Blockly.LABROBOT_LEFT_FRONT = "left front";
Blockly.LABROBOT_LEFT_BOTTOM = "left back";
Blockly.LABROBOT_RIGHT_FRONT = "right front";
Blockly.LABROBOT_RIGHT_BOTTOM = "right back";
Blockly.LABROBOT_DROPVALUE = "status";
Blockly.LABROBOT_DROP_NORMAL = "normal";
Blockly.LABROBOT_DROP_HANGING = "hanging";
Blockly.LABROBOT_CRASHSENSOR = "anti-crash sensor";
Blockly.LABROBOT_CRASH_NORMAL = "clear";
Blockly.LABROBOT_CRASH_BLOCKED = "blocked";
Blockly.LABROBOT_CRASHVALUE = "status";
Blockly.LABROBOT_TRACKSENSOR = "tracking sensor";
Blockly.LABROBOT_TRACKVALUE = "status";
Blockly.LABROBOT_LEFT_OUT = "left-outside";
Blockly.LABROBOT_LEFT_IN = "left-inside";
Blockly.LABROBOT_RIGHT_IN = "right-inside";
Blockly.LABROBOT_RIGHT_OUT = "right-outside";
Blockly.LABROBOT_COLORSENSOR = "color sensor";
Blockly.LABROBOT_COLORVALUE = "status";
Blockly.LABROBOT_LIGHTSENSOR = "light sensor";
Blockly.LABROBOT_ULTRASONIC0 = "ultrasonic sensor";
Blockly.LABROBOT_ULTRASONIC = "ultrasonic sensor(old version)";
Blockly.LABROBOT_TOPBUTTON_ACTIVATED = "button is pressed";
Blockly.LABROBOT = "robot";
Blockly.LABROBOT_FORWARD = "move forward";
Blockly.LABROBOT_BACKWARD = "move backward";
Blockly.LABROBOT_VC_DEFINE = "define voice command";
Blockly.LABROBOT_ACTION = "action as";
Blockly.LABROBOT_ADDCMD = "new command";
//...LABROBOT...END...

//...CURIEBOX...
Blockly.CURIEBOX_GET_AC = 'read the accelerometer for';
Blockly.CURIEBOX_AX = 'X axis';
Blockly.CURIEBOX_AY = 'Y axis';
Blockly.CURIEBOX_AZ = 'Z axis';
Blockly.HOUR = 'hours';
Blockly.MINUTE = 'minutes';
Blockly.SECOND = 'seconds';
Blockly.YEAR = 'year';
Blockly.MONTH = 'month';
Blockly.DAY = 'date';
Blockly.CURIEBOX_SETTIME = 'set time';
Blockly.CURIEBOX_READTIME = 'load time';
//...CURIEBOX...END...

//bluebit
Blockly.bluebit_LCD_STAT_ON='On';
Blockly.bluebit_LCD_STAT_OFF='Off';
Blockly.bluebit_LCD_scrollDisplayLeft = 'Scroll one grid to the left';
Blockly.bluebit_LCD_scrollDisplayRight = 'Scroll one grid to the right';
Blockly.bluebit_LCD_autoscroll = 'Automatic rolling';
Blockly.bluebit_LCD_noAutoscroll = 'No automatic rolling';
Blockly.bluebit_extIOInit = 'Extended I/O PIN';
Blockly.bluebit_readExtendedIO = 'Extended I/O value at PIN';
Blockly.bluebit_writeExtendedIO = 'Set Extended I/O PIN';
Blockly.bluebit_initPixel = 'Initialized color lamps,sum';
Blockly.bluebit_setPixelAndShow = 'Color lamps,order';
Blockly.bluebit_get_four_button = 'Joy Button has been pressed';
Blockly.bluebit_get_color_val = 'get color value';
Blockly.BLUEBIT_sensor = "Sensor";
Blockly.ANALOGREAD_MODULE = "Analog input module";
Blockly.ANALOGWRITE_MODULE = "Analog output module";
Blockly.DIGITALREAD_MODULE = "Digital input module";
Blockly.DIGITALWRITE_MODULE = "Digital output module";
Blockly.BLUEBIT_PIN1_MODULE = "PIN D1";
Blockly.BLUEBIT_PIN2_MODULE = "PIN D2";
Blockly.BLUEBIT_PIN_MODULE = "PIN";
Blockly.BLUEBIT_AIN2_PIN = "PIN AIN2#";
Blockly.TEMPERATURE = " temperature";
Blockly.HUMILITY = "humidity";
Blockly.BLUEBIT_SOUND_MODULE = "sound";
Blockly.BLUEBIT_LIGHT_MODULE = "simulated light";
Blockly.BLUEBIT_SLIDER_MODULE = "linear sliding potentiometer";
Blockly.BLUEBIT_WATER_MODULE = "water level";
Blockly.BLUEBIT_SOIL_MODULE =   "soil humidity";
Blockly.BLUEBIT_ROTATION_MODULE = "rotational potentiometer";
Blockly.BLUEBIT_JOYBUTTON_MODULE = "Joy Button";
Blockly.BLUEBIT_GAS_MODULE =   "smog";
Blockly.BLUEBIT_IR_OBSTACLE_MODULE = "infrared detection";
Blockly.BLUEBIT_BUTTON_MODULE = "button";
Blockly.BLUEBIT_VIBRATION_MODULE = "vibration";
Blockly.BLUEBIT_RFID_MODULE = "RFID";
Blockly.BLUEBIT_FINGER_MODULE = "fingerprint";
Blockly.BLUEBIT_PIR_MODULE = "PIR";
Blockly.BLUEBIT_MAGNETIC_MODULE = "magnetic";
Blockly.BLUEBIT_JOYSTICK_MODULE = "Joystick";
Blockly.BLUEBIT_LINE_FOLLOWER_MODULE = "Line Follower";
Blockly.BLUEBIT_LINE_NTC_TEMP_MODULE = "get NTC temperature";
Blockly.BLUEBIT_LINE_LM35_TEMP_MODULE = "get LM35 temperature";
Blockly.BLUEBIT_BUZZER_MODULE = "buzzer";
Blockly.BLUEBIT_LED_MODULE = "LED";
Blockly.BLUEBIT_FAN_MODULE = "fan";
Blockly.BLUEBIT_RELAY_MODULE = "electric relay";
Blockly.BLUEBIT_LASER_MODULE = "laser";
Blockly.BLUEBIT_BUTTON4_MODULE = "get Joy Button value";
Blockly.BLUEBIT_RECODER_MODULE = "record and play";
Blockly.BLUEBIT_USB_MODULE = "USB switch";
Blockly.BLUEBIT_ULTRASONIC_MODULE = "I2C ultrasonic value";
Blockly.BLUEBIT_I2C_light = "I2C light value";
Blockly.BLUEBIT_I2C_current = "I2C current value at";
Blockly.BLUEBIT_I2C_voltage = "I2C voltage value at";
Blockly.BLUEBIT_I2C_pH  = "I2C pH value at";
Blockly.BLUEBIT_I2C_airPressure = "I2C air pressure value at";
Blockly.BLUEBIT_I2C_magnetic = "I2C magnetic induction value at";
Blockly.BLUEBIT_I2C_PhotoelectricGate = "I2C Photoelectric gate value at";
Blockly.BLUEBIT_I2C_force = "I2C force value at";
Blockly.BLUEBIT_I2C_conductivity = "I2C conductivity value at";
Blockly.BLUEBIT_AMBIENT_LIGHT_MODULE = "get Ambient Light values";
Blockly.BLUEBIT_COLOR_MODULE = "get the color value";
Blockly.BLUEBIT_SHT20_MODULE = "I2C temperature and humidity value";
Blockly.BLUEBIT_I2C_codeMotor = "Set I2C Coded motor value at";
Blockly.Speed = 'Speed';
Blockly.BLUEBIT_I2C_codeMotor_tip = 'Speed -1023~1023';
Blockly.BLUEBIT_DCMOTOR_MODULE = "Set DC motor PIN AIN1#";
Blockly.BLUEBIT_DIR = "direction";
Blockly.BLUEBIT_DCMOTOR_SPEED = "speed";
Blockly.CLOCKWISE = "CLOCKWISE";
Blockly.ANTICLOCKWISE = "ANTICLOCKWISE";
Blockly.STOP = "STOP";
Blockly.BLUEBIT_RGBLED_INIT = "initialize RGB LED";
Blockly.BLUEBIT_RGBLED_NUM = "Number of lamps";
Blockly.BLUEBIT_RGBLED_SET_COLOR = "Set RGB ";
Blockly.BLUEBIT_RBGLED_NUMBER = "order number";
Blockly.BLUEBIT_RBGLED_R = "R";
Blockly.BLUEBIT_RBGLED_G = "G";
Blockly.BLUEBIT_RBGLED_B = "B";
Blockly.BLUEBIT_RGBLED_CMD = "RGB command";
Blockly.RGB_SHOW = "show";
Blockly.RGB_CLEAR = "clear all";
Blockly.BLUEBIT_LCD1602 = "initialize 1602 LCD";
Blockly.BLUEBIT_INIT_MP3 = "initialize MP3 PIN RX";
Blockly.BLUEBIT_MP3_TX = "PIN TX";	
Blockly.BLUEBIT_MIDI_PIANO = "Acoustic Grand Piano"; //Acoustic Grand Piano
Blockly.BLUEBIT_Vibraphone = "Vibraphone"; //Vibraphone
Blockly.BLUEBIT_MIDI_ORGAN = "Drawbar Organ"; //Drawbar Organ
Blockly.BLUEBIT_Acoustic_Guitar = "Acoustic Guitar"; //Acoustic Guitar
Blockly.BLUEBIT_Electric_Guitar = "Electric Guitar"; //Electric Guitar
Blockly.BLUEBIT_Acoustic_Bass = "Acoustic Bass";  //Acoustic Bass
Blockly.BLUEBIT_String_Ensemble = "String Ensemble";  //String Ensemble
Blockly.BLUEBIT_Violin = "Violin";  //Violin
Blockly.BLUEBIT_Trumpet = "Trumpet";  //Trumpet
Blockly.BLUEBIT_Sax = "Sax";  //Sax
Blockly.BLUEBIT_Flute = "Flute";  //Flute
Blockly.BLUEBIT_Steel_Drums = "Steel Drums";  //Steel Drums
Blockly.BLUEBIT_Lead = "Lead";  //Lead
Blockly.BLUEBIT_Pad = "Pad";  //Pad
Blockly.BLUEBIT_Bass_Drum = "Bass Drum";  //Bass Drum
Blockly.BLUEBIT_Snare_Drum = "Snare Drum";  //Snare Drum
Blockly.BLUEBIT_Closed_Hi_hat = "Closed Hi-hat";  //Closed Hi-hat
Blockly.BLUEBIT_Open_Hi_hat = "Open Hi-hat";  //Open Hi-hat
Blockly.BLUEBIT_Low_Tom = "Low Tom";  //Low Tom
Blockly.BLUEBIT_High_Tom = "High Tom";  //High Tom
Blockly.BLUEBIT_Tambourine = "Tambourine";  //Tambourine
Blockly.BLUEBIT_Crash_Cymbal = "Crash Cymbal";  //Crash Cymbal
Blockly.BLUEBIT_Ride_Cymbal = "Ride Cymbal";  //Ride Cymbal
Blockly.BLUEBIT_Mute_High_Conga = "Mute High Conga";  //Mute High Conga
Blockly.BLUEBIT_Low_Conga = "Low Conga";  //Low Conga
Blockly.BLUEBIT_Maracas = "Maracas";  //Maracas
Blockly.BLUEBIT_Claves = "Claves";  //Claves
Blockly.BLUEBIT_INIT_MIDI = "Initialize MIDI module PIN RX";
Blockly.BLUEBIT_MP3_TX = "PIN TX";
Blockly.BLUEBIT_VOL = "volume";
Blockly.BLUEBIT_SET_MIDI1 = "The MIDI module melodic timbre is set to";
Blockly.BLUEBIT_SET_MIDI2 = "The MIDI module percussion instrument is set to";
Blockly.BLUEBIT_MIDI_PLAY_NOTE = "MIDI module playback tone";
Blockly.BLUEBIT_MIDI_VELOCITY = " velocity of sound";
Blockly.BLUEBIT_STOPPLAYMIDI =  "MIDI stop";
Blockly.BLUEBIT_MATRIXLED_SETUP = "Initialize LED lattice";
Blockly.BLUEBIT_DRAW_PIXEL = "Set LED lattice coordinate";
Blockly.BLUEBIT_PIXEL_X = "X";
Blockly.BLUEBIT_PIXEL_Y = "Y";
Blockly.BLUEBIT_MATRIX_CMD = "LED lattice";
Blockly.BLUEBIT_MATRIX_CLEAR = "clear";
Blockly.BLUEBIT_MATRIX_DISPLAY = "flash lattice";
Blockly.BLUEBIT_PIXEL_ON = "ON";
Blockly.BLUEBIT_PIXEL_OFF = "OFF";
Blockly.BLUEBIT_MATRIX_BMP = "Set lattice image";
Blockly.BLUEBIT_MP3PLAY = "MP3 play";
Blockly.BLUEBIT_MP3MENU = "order";
Blockly.BLUEBIT_MP3MUSIC = "music";
Blockly.BLUEBIT_MP3LOOP = "MP3 repeat play";
Blockly.BLUEBIT_PAUSE = "pause";
Blockly.BLUEBIT_STOP = "stop";
Blockly.BLUEBIT_PLAY = "play";
Blockly.BLUEBIT_NEXT = "next";
Blockly.BLUEBIT_MP3SET = "Set MP3";
Blockly.BLUEBIT_PREVIOUS = "previous";
Blockly.BLUEBIT_MP3STAT = "The MP3 status is";
Blockly.BLUEBIT_MP3SETVOLUME = "Set the volume of the MP3 to";
Blockly.BLUEBIT_MATRIX_DISPLAY = "display";
Blockly.BLUEBIT_MATRIX_STR = "LED lattice coordinate";
Blockly.BLUEBIT_PIXEL_LINE = " order ";
Blockly.BLUEBIT_MAXTRIX_DISPLAY1  = " row display ";
Blockly.BLUEBIT_MATRIX_STR1 = "LED lattice";
Blockly.BLUEBIT_LIMIT_SWITCH = "Limit switch";
Blockly.BLUEBIT_LABMP_STRING = "Sky star lamp string"
Blockly.BLUEBIT_SERIAL_READ = "Get data";

//中级实验箱2
Blockly.Duinoplusbox2_INIT_MP3 = "initialize MP3";
Blockly.Duinoplusbox2_MATRIXLED_Bright = "Setting LED Lattice brightness";
Blockly.Duinoplusbox2_MATRIXLED_PointColor = "LED Lattice, order";
Blockly.Duinoplusbox2_MATRIXLED_PointColor2 = "LED`s color";
Blockly.Duinoplusbox2_MATRIX_CLEAR = "clear";
Blockly.Duinoplusbox2_Time_int = "Initialization time module";
Blockly.Duinoplusbox2_Time_set = "Set time as";
Blockly.Duinoplus2_SetDS3231_tooltip = "The week option represents the day of the week, and Sunday is the first day of the week";
Blockly.Duinoplus2_get_Infrared_remote  = "Get infrared remote control value"; 
Blockly.Duinoplus2_SET_STEPMOTOR = "Set step motor";

//Arduino实验箱
Blockly.reset='Reset';
Blockly.arduinobox_WatchDog='Set the overflow time of the watchdog';
Blockly.arduinobox_WatchDog_tip='1,2,4,8 corresponding to S, that is, seconds. The rest corresponds to MS, in milliseconds';
Blockly.arduinobox_WatchDog_forbid='No watchdog';
Blockly.arduinobox_LIGHTSENSOR_VALUE = "Light value";
Blockly.arduinobox_SlidePot_VALUE = "Slider value";
Blockly.arduinobox_PullPot_VALUE = "Toggle potentiometer value";
Blockly.arduinobox_buzzer_tone = "Buzzer tone";
Blockly.brightness = "brightness";
Blockly.arduinobox_LCD_2Lines = "Set the two lines of LCD display";
Blockly.arduinobox_LCD_whichLine = "Set the LCD line";
Blockly.arduinobox_LCD_content = "content";
Blockly.arduinobox_SET_MATRIXON = "dot matrix display";
//DS18B20
Blockly.RESOLUTION = "Resolution";


/* catDuinoplusBox = "DuinoplusBox"; */


	
